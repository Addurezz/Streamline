@startuml
package NodeService {
    interface INode {
        -Next : List<INode>
        +Execute(context : WorkflowContext) : void
    }
       
    interface IActionNode {
        
    }
    
    class DecisionNode {
        +TrueNext : List<INode>
        +FalseNext : List<INode>
        +Decision : Condition
        
        +DecisionNode(decision : Condition)
    }
    
    class SingleCondition {
        - EvaluationLogic : Func<WorkflowContext, bool>
        + SingleDecision(logic : Func<WorkflowContext, bool>)
        + Evaluate() : bool
    }
    
    class MultiCondition {
        +Conditions : List<SingleCondition>
        +Evaluate() : bool
    }
    
    class Condition {
        +Evaluate() : bool
    }

}

INode <|.. IActionNode
INode <|.. DecisionNode
DecisionNode o-- Condition
Condition <|-- SingleCondition 
Condition <|-- MultiCondition
MultiCondition o-- SingleCondition
@enduml